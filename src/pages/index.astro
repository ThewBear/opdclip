---
import Layout from "../layouts/Layout.astro";
import BreakDaySnippet from "../components/BreakDaySnippet.astro";

interface Snippet {
  category: string;
  text: string;
}

const snippets: Snippet[] = [
  { category: "‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ", text: "‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á" },
  { category: "‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ", text: "‡∏°‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏£‡∏¥‡∏á" },
  { category: "‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ", text: "‡∏°‡∏µ‡∏™‡∏ï‡∏¥‡∏™‡∏±‡∏°‡∏õ‡∏ä‡∏±‡∏ç‡∏ç‡∏∞‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå" },
  { category: "‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ", text: "‡∏°‡∏≤‡∏£‡∏±‡∏ö‡∏¢‡∏≤‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ï‡∏≤‡∏°‡∏ô‡∏±‡∏î" },
  { category: "‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à", text: "‡πÄ‡∏≠‡∏Å‡∏ã‡πÄ‡∏£‡∏¢‡πå‡∏õ‡∏≠‡∏î‡∏õ‡∏Å‡∏ï‡∏¥" },
  { category: "‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à", text: "‡∏ï‡∏£‡∏ß‡∏à‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡∏£‡∏£‡∏†‡πå" },
  {
    category: "‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à",
    text: "‡∏ï‡∏£‡∏ß‡∏à‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏≤‡∏£‡πÄ‡∏™‡∏û‡∏ï‡∏¥‡∏î (metamphetamine) ‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞",
  },
  { category: "‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à", text: "‡∏ï‡∏£‡∏ß‡∏à‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏ã‡∏¥‡∏ü‡∏¥‡∏•‡∏¥‡∏™" },
  { category: "‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à", text: "‡∏ï‡∏£‡∏ß‡∏à‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡πÄ‡∏≠‡∏ä‡πÑ‡∏≠‡∏ß‡∏µ" },
  { category: "‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à", text: "‡∏ï‡∏£‡∏ß‡∏à‡∏ï‡∏≤‡∏ö‡∏≠‡∏î‡∏™‡∏µ‡∏ú‡∏•‡∏õ‡∏Å‡∏ï‡∏¥" },
  { category: "‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢", text: "‡∏ï‡∏¥‡∏î‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏ô" },
  { category: "‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢", text: "‡πÇ‡∏£‡∏Ñ‡πÑ‡∏Ç‡πâ‡∏´‡∏ß‡∏±‡∏î‡πÉ‡∏´‡∏ç‡πà" },
  { category: "‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢", text: "‡πÇ‡∏£‡∏Ñ‡πÑ‡∏Ç‡πâ‡∏´‡∏ß‡∏±‡∏î‡πÉ‡∏´‡∏ç‡πà‡∏™‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå A" },
  { category: "‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢", text: "‡πÇ‡∏£‡∏Ñ‡πÑ‡∏Ç‡πâ‡∏´‡∏ß‡∏±‡∏î‡πÉ‡∏´‡∏ç‡πà‡∏™‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå B" },
  { category: "‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢", text: "‡πÇ‡∏£‡∏Ñ‡∏Å‡∏£‡∏î‡πÑ‡∏´‡∏•‡∏¢‡πâ‡∏≠‡∏ô" },
  { category: "‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢", text: "‡πÇ‡∏£‡∏Ñ‡∏Å‡∏£‡∏∞‡πÄ‡∏û‡∏≤‡∏∞" },
  {
    category: "‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢",
    text: "‡πÇ‡∏£‡∏Ñ‡∏Å‡∏£‡∏∞‡πÄ‡∏û‡∏≤‡∏∞‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏•‡∏≥‡πÑ‡∏™‡πâ‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö‡πÄ‡∏â‡∏µ‡∏¢‡∏ö‡∏û‡∏•‡∏±‡∏ô",
  },
  { category: "‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏ï‡∏±‡∏ß", text: "FIT test positive" },
  { category: "‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏ï‡∏±‡∏ß", text: "Hepatitis B" },
  { category: "‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß", text: "‡πÇ‡∏£‡∏Ñ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡∏™‡∏π‡∏á" },
  { category: "‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß", text: "‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô" },
  { category: "‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß", text: "‡πÇ‡∏£‡∏Ñ‡πÑ‡∏Ç‡∏°‡∏±‡∏ô‡πÉ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏™‡∏π‡∏á" },
  { category: "‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß", text: "‡πÇ‡∏£‡∏Ñ‡∏´‡∏≠‡∏ö‡∏´‡∏∑‡∏î" },
  { category: "‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß", text: "‡πÇ‡∏£‡∏Ñ‡πÑ‡∏ï‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏£‡∏±‡∏á" },
  { category: "‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß", text: "‡πÇ‡∏£‡∏Ñ‡πÑ‡∏ó‡∏£‡∏≠‡∏¢‡∏î‡πå" },
];

const breakDays = [1, 2, 3, 4, 5, 6, 7, 10, 14];

// Group snippets by category
const groupedSnippets: Record<string, Snippet[]> = {};
snippets.forEach((snippet) => {
  if (!groupedSnippets[snippet.category]) {
    groupedSnippets[snippet.category] = [];
  }
  groupedSnippets[snippet.category].push(snippet);
});
---

<Layout>
  <div
    class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8 px-4"
  >
    <div class="max-w-6xl mx-auto">
      <!-- Header -->
      <div class="bg-white rounded-lg shadow-lg p-6 mb-6">
        <h1 class="text-3xl font-bold text-indigo-900 mb-2">
          üìã OPD Clipboard Tool
        </h1>
        <p class="text-gray-600">
          ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡πà‡∏≠‡∏¢ - Click to copy frequently used text
        </p>
      </div>

      <!-- Snippets Grid -->
      <div class="space-y-6">
        {
          Object.entries(groupedSnippets).map(([category, items]) => (
            <div class="bg-white rounded-lg shadow-lg p-6">
              <h2 class="text-xl font-semibold text-indigo-800 mb-4">
                {category}
              </h2>
              <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">
                {items.map((snippet) => (
                  <button
                    class="snippet-btn text-left p-4 bg-indigo-50 hover:bg-indigo-100 rounded-lg border-2 border-indigo-200 hover:border-indigo-400 transition-all duration-200 hover:shadow-md active:scale-95"
                    data-text={snippet.text}
                  >
                    <span class="text-gray-800 font-medium">
                      {snippet.text}
                    </span>
                  </button>
                ))}
              </div>
            </div>
          ))
        }

        <!-- Break Days Section -->
        <div class="bg-white rounded-lg shadow-lg p-6">
          <h2 class="text-xl font-semibold text-indigo-800 mb-4">‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏±‡∏Å</h2>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">
            {breakDays.map((days) => <BreakDaySnippet days={days} />)}
          </div>
        </div>
      </div>

      <!-- Toast Notification -->
      <div
        id="toast"
        class="fixed bottom-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg transform translate-y-20 opacity-0 transition-all duration-300"
      >
        ‚úì ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß!
      </div>
    </div>
  </div>

  <script>
    // Copy to clipboard functionality
    document.querySelectorAll(".snippet-btn").forEach((button) => {
      button.addEventListener("click", async () => {
        const text = button.getAttribute("data-text");
        if (text) {
          try {
            await navigator.clipboard.writeText(text);

            // Change button to light green
            const originalClasses = button.className;
            button.classList.remove(
              "bg-indigo-50",
              "hover:bg-indigo-100",
              "border-indigo-200",
              "hover:border-indigo-400",
            );
            button.classList.add("bg-green-100", "border-green-400");

            showToast();

            // Revert back to original style after 500ms
            setTimeout(() => {
              button.className = originalClasses;
            }, 500);
          } catch (err) {
            console.error("Failed to copy:", err);
          }
        }
      });
    });

    function showToast() {
      const toast = document.getElementById("toast");
      if (toast) {
        toast.classList.remove("translate-y-20", "opacity-0");
        toast.classList.add("translate-y-0", "opacity-100");

        setTimeout(() => {
          toast.classList.remove("translate-y-0", "opacity-100");
          toast.classList.add("translate-y-20", "opacity-0");
        }, 2000);
      }
    }
  </script>
</Layout>
